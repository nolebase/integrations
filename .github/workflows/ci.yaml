name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  STORE_PATH: ''

jobs:
  unittest:
    strategy:
      matrix:
        node-version: ['18.x', '20.x']

    name: Unit tests - ${{ matrix.node-version }}
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          run_install: false
          version: 8

      - name: Obtain pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Obtain pnpm store cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run packages:build

      - name: Test
        run: pnpm run test:run

  lint:
    strategy:
      matrix:
        node-version: ['18.x', '20.x']

    name: Lint - ${{ matrix.node-version }}
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          run_install: false
          version: 8

      - name: Obtain pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Obtain pnpm store cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint

  packages-build-test:
    strategy:
      matrix:
        node-version: ['18.x', '20.x']

    name: Packages Build Test - ${{ matrix.node-version }}
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          run_install: false
          version: 8

      - name: Obtain pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Obtain pnpm store cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run packages:build
